name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  lint:
    name: Run eslint
    runs-on: ubuntu-latest
    container:
      image: node
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: install
      - name: Lint
        uses: borales/actions-yarn@v2.1.0
        with:
          cmd: lint
  build:
    name: Build docker container
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v2
      - name: Login to github docker
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.PACKAGES_TOKEN }}
      - name: Build docker image
        run: docker build -t ${{ github.event.repository.name }} .
      - name: Docker tag
        run: docker tag ${{ github.event.repository.name }} ghcr.io/matchmakerbot/${{ github.event.repository.name }}:latest
      - name: Push docker image
        run: docker push ghcr.io/matchmakerbot/${{ github.event.repository.name }}:latest
  deploy:
    name: Deploy to kubernetes
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Save kubeconfig
        uses: nicklasfrahm/scp-action@main
        with:
          direction: download
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          insecure_password: ${{ secrets.VPS_PASSWORD }}
          port: ${{ secrets.VPS_PORT }}
          source: "~/.kube/config"
          target: "$GITHUB_WORKSPACE/.kubeconfig"
      - name: Install helm
        run: curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 && chmod 700 get_helm.sh && ./get_helm.sh
      - name: Update deployment
        run: helm upgrade ${{ github.event.repository.name }} ./chart --install --atomic --namespace matchmaker --timeout 2m --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig --set-string sha=${{ github.sha }} --set-string redis.password=${{ secrets.REDIS_PASSWORD }} --set-string bot.token=${{ secrets.BOT_TOKEN }} --set-string mongo.username=${{ secrets.MONGO_USERNAME }} --set-string mongo.password=${{ secrets.MONGO_PASSWORD }}